{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursor\\\\mindmap\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport MindMap from './components/MindMap';\nimport { Box, Button, CircularProgress, Typography, Snackbar, Alert } from '@mui/material';\nimport { loadGoogleDriveAPI, authenticateUser, getFolderContents } from './services/googleDriveService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID || '1033835493377-4gk2e80bhgsr51j6f9j9vo5mp7k7j1ad.apps.googleusercontent.com'; // 예시 ID (실제 배포 시 환경변수 사용 권장)\n  const API_KEY = process.env.REACT_APP_GOOGLE_API_KEY || 'AIzaSyBVxLt7aRqNmDRL6NLq2CRSVKrPb3IeYIw'; // 예시 키 (실제 배포 시 환경변수 사용 권장)\n  const ROOT_FOLDER_ID = '1MTFQM7oGUGDg5xYwbuuw7rwrXXfoU-a9';\n  const DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'];\n  useEffect(() => {\n    const initializeGoogleAPI = async () => {\n      try {\n        console.log('Google API 초기화 중...');\n        const initialized = await loadGoogleDriveAPI(CLIENT_ID, API_KEY, DISCOVERY_DOCS);\n        console.log('Google API 초기화 완료:', initialized);\n\n        // 안전하게 토큰 존재 여부 확인\n        const tokenExists = window.gapi && window.gapi.client && typeof window.gapi.client.getToken === 'function' && window.gapi.client.getToken() !== null;\n        console.log('인증 토큰 존재 여부:', tokenExists);\n        setIsSignedIn(tokenExists);\n        if (tokenExists) {\n          loadFolderData();\n        }\n      } catch (err) {\n        console.error('API 초기화 오류:', err);\n        setError('Google API 초기화 중 오류가 발생했습니다: ' + (err.message || '알 수 없는 오류'));\n        setOpenSnackbar(true);\n      }\n    };\n    initializeGoogleAPI();\n  }, []);\n  const handleSignIn = async () => {\n    setIsLoading(true);\n    try {\n      console.log('로그인 시도...');\n      const success = await authenticateUser();\n      console.log('로그인 결과:', success);\n      setIsSignedIn(success);\n      if (success) {\n        loadFolderData();\n      }\n    } catch (err) {\n      console.error('로그인 중 오류 발생:', err);\n      // 오류 메시지 처리 개선\n      let errorMessage = '인증 중 오류가 발생했습니다';\n      if (err && err.message) {\n        errorMessage += ': ' + err.message;\n      } else if (err && typeof err === 'object') {\n        errorMessage += ': ' + JSON.stringify(err);\n      } else if (err) {\n        errorMessage += ': ' + err;\n      } else {\n        errorMessage += ': 알 수 없는 오류';\n      }\n      setError(errorMessage);\n      setOpenSnackbar(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const loadFolderData = async () => {\n    setIsLoading(true);\n    try {\n      const rootFolderData = await fetchFolderStructure(ROOT_FOLDER_ID);\n      setData(rootFolderData);\n    } catch (err) {\n      console.error('폴더 데이터 로드 오류:', err);\n      setError('폴더 데이터를 불러오는 중 오류가 발생했습니다: ' + (err.message || '알 수 없는 오류'));\n      setOpenSnackbar(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchFolderStructure = async (folderId, depth = 0, maxDepth = 3) => {\n    if (depth > maxDepth) return null;\n    try {\n      const folderContents = await getFolderContents(folderId);\n      const folderInfo = folderContents.find(item => item.id === folderId) || {\n        id: folderId,\n        name: depth === 0 ? '루트 폴더' : '폴더',\n        mimeType: 'application/vnd.google-apps.folder'\n      };\n      const children = [];\n      for (const item of folderContents) {\n        if (item.id === folderId) continue;\n        let child = {\n          id: item.id,\n          name: item.name,\n          type: item.mimeType.includes('folder') ? 'folder' : 'file',\n          mimeType: item.mimeType\n        };\n        if (item.mimeType.includes('folder')) {\n          const childData = await fetchFolderStructure(item.id, depth + 1, maxDepth);\n          if (childData && childData.children) {\n            child.children = childData.children;\n          }\n        }\n        children.push(child);\n      }\n      return {\n        id: folderInfo.id,\n        name: folderInfo.name,\n        type: 'folder',\n        mimeType: folderInfo.mimeType,\n        children: children\n      };\n    } catch (err) {\n      console.error('폴더 구조를 가져오는 중 오류 발생했습니다:', err);\n      throw err;\n    }\n  };\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"App\",\n    children: [!isSignedIn ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n        backgroundColor: '#f5f5f5'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"\\uAD6C\\uAE00 \\uB4DC\\uB77C\\uC774\\uBE0C \\uB9C8\\uC778\\uB4DC\\uB9F5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          mb: 4\n        },\n        children: \"\\uAD6C\\uAE00 \\uB4DC\\uB77C\\uC774\\uBE0C \\uD3F4\\uB354\\uB97C \\uC2DC\\uAC01\\uC801\\uC778 \\uB9C8\\uC778\\uB4DC\\uB9F5\\uC73C\\uB85C \\uD45C\\uC2DC\\uD569\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSignIn,\n        disabled: isLoading,\n        sx: {\n          borderRadius: '20px',\n          padding: '10px 20px',\n          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n          '&:hover': {\n            transform: 'translateY(-2px)',\n            boxShadow: '0 6px 8px rgba(0, 0, 0, 0.15)'\n          }\n        },\n        children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 26\n        }, this) : '구글 계정으로 로그인'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      className: \"mindmap-wrapper\",\n      sx: {\n        height: '100vh',\n        width: '100vw'\n      },\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this) : data ? /*#__PURE__*/_jsxDEV(MindMap, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          textAlign: 'center',\n          mt: 4\n        },\n        children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC62C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WC13i6WVqX+M8azpWk5MhYoUWeQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MindMap","Box","Button","CircularProgress","Typography","Snackbar","Alert","loadGoogleDriveAPI","authenticateUser","getFolderContents","jsxDEV","_jsxDEV","App","_s","isLoading","setIsLoading","isSignedIn","setIsSignedIn","error","setError","data","setData","openSnackbar","setOpenSnackbar","CLIENT_ID","process","env","REACT_APP_GOOGLE_CLIENT_ID","API_KEY","REACT_APP_GOOGLE_API_KEY","ROOT_FOLDER_ID","DISCOVERY_DOCS","initializeGoogleAPI","console","log","initialized","tokenExists","window","gapi","client","getToken","loadFolderData","err","message","handleSignIn","success","errorMessage","JSON","stringify","rootFolderData","fetchFolderStructure","folderId","depth","maxDepth","folderContents","folderInfo","find","item","id","name","mimeType","children","child","type","includes","childData","push","handleCloseSnackbar","className","sx","display","flexDirection","alignItems","justifyContent","height","backgroundColor","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","color","onClick","disabled","borderRadius","padding","boxShadow","transform","size","width","textAlign","mt","open","autoHideDuration","onClose","severity","_c","$RefreshReg$"],"sources":["C:/Cursor/mindmap/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport MindMap from './components/MindMap';\r\nimport { Box, Button, CircularProgress, Typography, Snackbar, Alert } from '@mui/material';\r\nimport { loadGoogleDriveAPI, authenticateUser, getFolderContents } from './services/googleDriveService';\r\n\r\nfunction App() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSignedIn, setIsSignedIn] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [data, setData] = useState(null);\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n\r\n  const CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID || \r\n    '1033835493377-4gk2e80bhgsr51j6f9j9vo5mp7k7j1ad.apps.googleusercontent.com'; // 예시 ID (실제 배포 시 환경변수 사용 권장)\r\n  const API_KEY = process.env.REACT_APP_GOOGLE_API_KEY || \r\n    'AIzaSyBVxLt7aRqNmDRL6NLq2CRSVKrPb3IeYIw'; // 예시 키 (실제 배포 시 환경변수 사용 권장)\r\n  const ROOT_FOLDER_ID = '1MTFQM7oGUGDg5xYwbuuw7rwrXXfoU-a9';\r\n  const DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'];\r\n\r\n  useEffect(() => {\r\n    const initializeGoogleAPI = async () => {\r\n      try {\r\n        console.log('Google API 초기화 중...');\r\n        const initialized = await loadGoogleDriveAPI(CLIENT_ID, API_KEY, DISCOVERY_DOCS);\r\n        console.log('Google API 초기화 완료:', initialized);\r\n        \r\n        // 안전하게 토큰 존재 여부 확인\r\n        const tokenExists = window.gapi && \r\n                          window.gapi.client && \r\n                          typeof window.gapi.client.getToken === 'function' && \r\n                          window.gapi.client.getToken() !== null;\r\n                          \r\n        console.log('인증 토큰 존재 여부:', tokenExists);\r\n        setIsSignedIn(tokenExists);\r\n        \r\n        if (tokenExists) {\r\n          loadFolderData();\r\n        }\r\n      } catch (err) {\r\n        console.error('API 초기화 오류:', err);\r\n        setError('Google API 초기화 중 오류가 발생했습니다: ' + (err.message || '알 수 없는 오류'));\r\n        setOpenSnackbar(true);\r\n      }\r\n    };\r\n    \r\n    initializeGoogleAPI();\r\n  }, []);\r\n\r\n  const handleSignIn = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      console.log('로그인 시도...');\r\n      const success = await authenticateUser();\r\n      console.log('로그인 결과:', success);\r\n      setIsSignedIn(success);\r\n      if (success) {\r\n        loadFolderData();\r\n      }\r\n    } catch (err) {\r\n      console.error('로그인 중 오류 발생:', err);\r\n      // 오류 메시지 처리 개선\r\n      let errorMessage = '인증 중 오류가 발생했습니다';\r\n      if (err && err.message) {\r\n        errorMessage += ': ' + err.message;\r\n      } else if (err && typeof err === 'object') {\r\n        errorMessage += ': ' + JSON.stringify(err);\r\n      } else if (err) {\r\n        errorMessage += ': ' + err;\r\n      } else {\r\n        errorMessage += ': 알 수 없는 오류';\r\n      }\r\n      setError(errorMessage);\r\n      setOpenSnackbar(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadFolderData = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const rootFolderData = await fetchFolderStructure(ROOT_FOLDER_ID);\r\n      setData(rootFolderData);\r\n    } catch (err) {\r\n      console.error('폴더 데이터 로드 오류:', err);\r\n      setError('폴더 데이터를 불러오는 중 오류가 발생했습니다: ' + (err.message || '알 수 없는 오류'));\r\n      setOpenSnackbar(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchFolderStructure = async (folderId, depth = 0, maxDepth = 3) => {\r\n    if (depth > maxDepth) return null;\r\n\r\n    try {\r\n      const folderContents = await getFolderContents(folderId);\r\n      const folderInfo = folderContents.find(item => item.id === folderId) || {\r\n        id: folderId,\r\n        name: depth === 0 ? '루트 폴더' : '폴더',\r\n        mimeType: 'application/vnd.google-apps.folder'\r\n      };\r\n\r\n      const children = [];\r\n      for (const item of folderContents) {\r\n        if (item.id === folderId) continue;\r\n\r\n        let child = {\r\n          id: item.id,\r\n          name: item.name,\r\n          type: item.mimeType.includes('folder') ? 'folder' : 'file',\r\n          mimeType: item.mimeType\r\n        };\r\n\r\n        if (item.mimeType.includes('folder')) {\r\n          const childData = await fetchFolderStructure(item.id, depth + 1, maxDepth);\r\n          if (childData && childData.children) {\r\n            child.children = childData.children;\r\n          }\r\n        }\r\n\r\n        children.push(child);\r\n      }\r\n\r\n      return {\r\n        id: folderInfo.id,\r\n        name: folderInfo.name,\r\n        type: 'folder',\r\n        mimeType: folderInfo.mimeType,\r\n        children: children\r\n      };\r\n    } catch (err) {\r\n      console.error('폴더 구조를 가져오는 중 오류 발생했습니다:', err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <Box className=\"App\">\r\n      {!isSignedIn ? (\r\n        <Box \r\n          sx={{ \r\n            display: 'flex', \r\n            flexDirection: 'column', \r\n            alignItems: 'center', \r\n            justifyContent: 'center', \r\n            height: '100vh',\r\n            backgroundColor: '#f5f5f5' \r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n            구글 드라이브 마인드맵\r\n          </Typography>\r\n          <Typography variant=\"body1\" sx={{ mb: 4 }}>\r\n            구글 드라이브 폴더를 시각적인 마인드맵으로 표시합니다\r\n          </Typography>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={handleSignIn}\r\n            disabled={isLoading}\r\n            sx={{ \r\n              borderRadius: '20px',\r\n              padding: '10px 20px',\r\n              boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n              '&:hover': {\r\n                transform: 'translateY(-2px)',\r\n                boxShadow: '0 6px 8px rgba(0, 0, 0, 0.15)'\r\n              }\r\n            }}\r\n          >\r\n            {isLoading ? <CircularProgress size={24} /> : '구글 계정으로 로그인'}\r\n          </Button>\r\n        </Box>\r\n      ) : (\r\n        <Box className=\"mindmap-wrapper\" sx={{ height: '100vh', width: '100vw' }}>\r\n          {isLoading ? (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : data ? (\r\n            <MindMap data={data} />\r\n          ) : (\r\n            <Typography variant=\"h6\" sx={{ textAlign: 'center', mt: 4 }}>\r\n              데이터를 불러올 수 없습니다.\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n      )}\r\n      <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity=\"error\" sx={{ width: '100%' }}>\r\n          {error}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}